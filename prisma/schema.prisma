datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

model Category {
  id          String    @id @default(cuid())
  locale      String
  name        String
  slug        String
  description String?
  meta        Meta      @relation(fields: [metaId], references: [id], onDelete: Cascade)
  metaId      String
  products    Product[]
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @default(now())

  @@unique([id])
}

model Meta {
  id          String       @id @default(cuid())
  locale      String
  title       String?
  description String?
  keywords    String?
  robots      Boolean      @default(true)
  categories  Category[]
  pages       Page[]
  products    Product[]
  collections Collection[]
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @default(now())

  @@unique([id])
}

model Content {
  id           String      @id @default(cuid())
  locale       String
  name         String
  slug         String
  title        String?
  content      String?
  page         Page?       @relation(fields: [pageId], references: [id])
  pageId       String?
  collection   Collection? @relation("CollectionContent", fields: [collectionId], references: [id], onDelete: Cascade)
  collectionId String?
  createdAt    DateTime    @default(now())
  updatedAt    DateTime    @default(now())

  @@unique([slug, locale])
}

model Product {
  id           String             @id @default(cuid())
  locale       String
  name         String
  slug         String
  categoryId   String?
  category     Category?          @relation(fields: [categoryId], references: [id], onDelete: Cascade)
  collectionId String?
  collection   Collection?        @relation(fields: [collectionId], references: [id], onDelete: Cascade)
  type         String?
  description  String?
  cover        Image?             @relation("CoverImage", fields: [imageId], references: [id])
  imageId      String?            @unique
  promotion    ProductPromotion[]
  technical    Image[]            @relation("Technical")
  files        File[]
  top          Boolean
  showroom     Boolean
  price        Float?
  meta         Meta?              @relation(fields: [metaId], references: [id])
  metaId       String?
  createdAt    DateTime           @default(now())
  updatedAt    DateTime           @default(now())

  @@unique([slug, locale])
}

model ProductPromotion {
  id        String   @id @default(cuid())
  layout    String
  images    Image[]  @relation("PromotionImages")
  Product   Product? @relation(fields: [productId], references: [id])
  productId String?
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())
}

model File {
  id        String   @id @default(cuid())
  path      String
  Product   Product? @relation(fields: [productId], references: [id])
  productId String?
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())
}

model Image {
  id                String             @id @default(cuid())
  path              String
  imageMetaId       String
  imageMeta         ImageMeta          @relation(fields: [imageMetaId], references: [id], onDelete: Cascade)
  ProductCover      Product?           @relation("CoverImage")
  TechnicalProducts Product[]          @relation("Technical")
  ProductPromotions ProductPromotion[] @relation("PromotionImages")
  GalleryImages     Gallery[]          @relation("GalleryImages")
  createdAt         DateTime           @default(now())
  updatedAt         DateTime           @default(now())
  section           Section?           @relation(fields: [sectionId], references: [id])
  sectionId         String?
  CollectionCover   Collection?        @relation("CollectionCover")
  collectionId      String?
  Material          Material[]         @relation("MaterialImage")

  @@unique([id, imageMetaId])
}

model ImageMeta {
  id        String   @id @default(cuid())
  locale    String
  title     String?
  alt       String?
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())
  Image     Image[]

  @@unique([id])
}

model Collection {
  id        String    @id @default(cuid())
  locale    String
  name      String
  slug      String
  products  Product[]
  meta      Meta      @relation(fields: [metaId], references: [id], onDelete: Cascade)
  metaId    String
  cover     Image?    @relation("CollectionCover", fields: [coverId], references: [id], onDelete: Cascade)
  coverId   String?   @unique
  createdAt DateTime  @default(now())
  updatedAt DateTime  @default(now())
  section   Section[]
  contents  Content[] @relation("CollectionContent")

  @@unique([id])
}

model Page {
  id        String    @id @default(cuid())
  locale    String
  name      String
  slug      String
  title     String?
  subtitle  String?
  meta      Meta      @relation(fields: [metaId], references: [id], onDelete: Cascade)
  metaId    String
  content   Content[]
  createdAt DateTime  @default(now())
  updatedAt DateTime  @default(now())

  @@unique([id])
}

model Gallery {
  id        String   @id @default(cuid())
  locale    String
  name      String
  slug      String
  images    Image[]  @relation("GalleryImages")
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())

  @@unique([id])
}

model Section {
  id           String      @id @default(cuid())
  locale       String
  name         String
  slug         String
  layout       String?
  title        String?
  content      String?
  collectionId String?
  collection   Collection? @relation(fields: [collectionId], references: [id], onDelete: Cascade)
  createdAt    DateTime    @default(now())
  updatedAt    DateTime    @default(now())
  images       Image[]

  @@unique([id])
}

model MaterialCategory {
  id          String     @id @default(cuid())
  locale      String
  name        String
  slug        String
  description String?
  materials   Material[]
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @default(now())

  @@unique([id])
}

model Material {
  id         String           @id @default(cuid())
  locale     String
  name       String
  slug       String
  category   MaterialCategory @relation(fields: [categoryId], references: [id], onDelete: Cascade)
  categoryId String
  image      Image?           @relation("MaterialImage", fields: [imageId], references: [id], onDelete: Cascade)
  imageId    String?
  createdAt  DateTime         @default(now())
  updatedAt  DateTime         @default(now())

  @@unique([id])
}
